---
title: haskell入门,基础知识
date: 2018-09-28
categories:
    - haskell
tags: 
    - haskell   
---



[toc]

<!--more-->

## 基本操作符 True or  False  && ||  not

## if/while/for 

```
if x > 100  then x   else x*2   
incX x = (if x > 100 then x else x*2) + 1  
```

## 函数定义

doubleMe x = x + x  
doubleUs x y = doubleMe x + doubleMe y   

## list 操作函数

```
Prelude> [1,2,3,4] ++ [9,10,11,12]
[1,2,3,4,9,10,11,12]

Prelude> "A":["C"]
["A","C"]

Prelude> length [1]
1
Prelude> head [1]
1
Prelude> tail [1]
[]
Prelude> null []
True
Prelude> reverse []
[]
Prelude> reverse [1,2]
[2,1]
Prelude> take 3 [1,2,3,4]
[1,2,3]
Prelude> take 1 3 [1,2,3,4]

Prelude> take 3 [1,2,3,4]
[1,2,3]
Prelude> drop 1 [1,2,3]
[2,3]
Prelude> minumun [1,2,3]

Prelude>  product [6,2,1,2]
24
Prelude>  product [6,2,1,10]
120

4 `elem` [1,2,3,4]
True
```

### Texas ranges

Prelude> [1..20]
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]

Prelude> [2,4..20]
[2,4,6,8,10,12,14,16,18,20]

Prelude> [3,6..20]take 10 (cycle [1,2,3])  take 10 (cycle [1,2,3])  take 10 (cycle [1,2,3])  take 10 (cycle [1,2,3])  take 10 (cycle [1,2,3])  
[3,6,9,12,15,18]

Prelude> [0.1, 0.3 .. 1]
[0.1,0.3,0.5,0.7,0.8999999999999999,1.0999999999999999]

Prelude>  take 10 (cycle [1,2,3])
[1,2,3,1,2,3,1,2,3,1]
Prelude> take 10 (repeat 5)
[5,5,5,5,5,5,5,5,5,5]
Prelude>